package DeliveryDrone

public
	with Base_Types;
    with Data_Types;
	with VERDICT_Properties;
	
	system GNC
		features
			-- inputs
			gnc_constellation: in data port Data_Types::Constellation;
			gnc_satellite0_pos: in data port Data_Types::Position.impl;
			gnc_satellite1_pos: in data port Data_Types::Position.impl;
			gnc_launch_pos: in data port Data_Types::Position.impl;
			
			-- outputs
			gnc_gps_pos: out data port Data_Types::Position.impl;
			gnc_gps_health_status: out data port Base_Types::Boolean;
			gnc_probe_constellation: out data port Data_Types::Constellation;
			gnc_imu_pos: out data port Data_Types::Position.impl;
			gnc_imu_health_status: out data port Base_Types::Boolean;
			gnc_probe_launch_pos: out data port Data_Types::Position.impl;
			
		
	end GNC;	

	system PositionEstimator 
		features
			-- inputs
			pos_est_gps_pos: in data port Data_Types::Position.impl;
			pos_est_imu_pos: in data port Data_Types::Position.impl;	
			pos_est_pos_act_in: in data port Data_Types::Position.impl;
			
			-- outputs
			pos_est_est_pos: out data port Data_Types::Position.impl;
	end PositionEstimator;

	system Navigation
		features
			-- inputs
			nav_est_pos: in data port Data_Types::Position.impl; 
			nav_dest_pos: in data port Data_Types::Position.impl;
			nav_cmd: in data port Base_Types::Boolean;
			nav_flight_control_state: in data port Base_Types::Boolean;
			
			-- outputs
			nav_move: out data port Base_Types::Boolean;				
			nav_cur_pos: out data port Data_Types::Position.impl;
			nav_pos_act_out: out data port Data_Types::Position.impl;
			nav_probe_dest_pos: out data port Data_Types::Position.impl;
	end Navigation;
	
	system FlightControl
		features
			-- inputs
			fc_actuation_response: in data port Base_Types::Boolean;
			fc_move: in data port Base_Types::Boolean;
			
			-- outputs
			fc_motor_cmd: out data port Base_Types::Boolean;
			fc_fc_state: out data port Base_Types::Boolean;
	end FlightControl;
	
	system Actuation
		features
			-- inputs
			motor_cmd: in data port Base_Types::Boolean;
			
			-- outputs
			response: out data port Base_Types::Boolean;
	end Actuation;
	
	system DeliveryPlanner
		features
			-- inputs
			dp_bus_in: in data port Data_Types::InputBus.impl;
			dp_cur_pos: in data port Data_Types::Position.impl;
			dp_delivery_status: in data port Data_Types::DeliveryStatus;
			dp_radio_response: in data port Data_Types::RadioResponse.impl;
			dp_camera_result: in data port Base_Types::Integer;
			dp_gps_health_status: in data port Base_Types::Boolean; 
			dp_imu_health_status: in data port Base_Types::Boolean;
			dp_rdo_health_status: in data port Base_Types::Boolean;
			dp_cam_health_status: in data port Base_Types::Boolean;
			dp_package_is_secure: in data port Base_Types::Boolean; 
			
			-- outputs
			dp_radio_cmd: out data port Base_Types::Boolean;
			dp_delivery_cmd: out data port Data_Types::PackageDeliveryCommand;
			dp_dest_location: out data port Data_Types::Position.impl;
			dp_bus_out: out data port Base_Types::Boolean;
	        dp_nav_cmd: out data port Base_Types::Boolean;					
			dp_camera: out data port Base_Types::Boolean;
			dp_probe_safe_landing: out data port Data_Types::ProbeSafeLanding.impl;
			dp_constellation: out data port Data_Types::Constellation; 
			launch_pos: out data port Data_Types::Position.impl;
			dp_probe_init_mode: out data port Base_Types::Boolean; 
			dp_probe_abort_mode: out data port Base_Types::Boolean; 
			dp_target_clear: out data port Base_Types::Boolean;
			dp_valid_marker: out data port Base_Types::Boolean;
	end DeliveryPlanner;
	
	system Radio
		features
			-- inputs
			rd_comm_in: in data port Data_Types::RadioResponse.impl;
			rd_radio_in: in data port Base_Types::Boolean;
			
			-- outputs
			rd_comm_out: out data port Base_Types::Boolean;
			rd_radio_out: out data port Data_Types::RadioResponse.impl;
			rd_health_status: out data port Base_Types::Boolean;
	end Radio;
	
	system DeliveryItemMechanism
		features
			-- inputs
			dim_delivery_cmd_in : in data port Data_Types::PackageDeliveryCommand;
			
			-- outputs
			dim_delivery_status_out: out data port Data_Types::DeliveryStatus;
			dim_package_is_secure: out data port Base_Types::Boolean;
	end DeliveryItemMechanism;
	
	system Camera
		features
			cm_camera_in: in data port Base_Types::Boolean;
			cm_camera_out: out data port Base_Types::Integer;
			cm_health_status: out data port Base_Types::Boolean;	
	end Camera;
			
	system Connector
		features
			-- inputs
				conn_bus_in: in data port Data_Types::InputBus.impl;
					
			-- outputs
				conn_bus_out: out data port Data_Types::InputBus.impl;
	end Connector;
	
	system DeliveryDroneSystem
		features
			dds_satellite0_sig_pos: in data port Data_Types::Position.impl;
			dds_satellite1_sig_pos: in data port Data_Types::Position.impl;
			dds_bus1: in data port Data_Types::InputBus.impl;
			dds_comm1: in data port Data_Types::RadioResponse.impl;
			
			dds_comm2: out data port Base_Types::Boolean;
			dds_bus2: out data port Base_Types::Boolean;			
			
			dds_radio_cmd: out data port Base_Types::Boolean;
			dds_radio_response: out data port Data_Types::RadioResponse.impl;
			dds_delivery_status: out data port Data_Types::DeliveryStatus;
			
			dds_actuation_out: out data port Base_Types::Boolean;
			dds_probe_init_mode: out data port Base_Types::Boolean;
			dds_probe_abort_mode: out data port Base_Types::Boolean;
			dds_probe_delivery_cmd: out data port Data_Types::PackageDeliveryCommand;
			dds_probe_constellation: out data port Data_Types::Constellation;
			dds_probe_launch_location: out data port Data_Types::Position.impl;
			dds_probe_delivery_location: out data port Data_Types::Position.impl;
			dds_probe_fly_cmd: out data port Base_Types::Boolean;
	end DeliveryDroneSystem;
	
	system implementation DeliveryDroneSystem.Impl
		subcomponents
			gnc: system GNC{
			   VERDICT_Properties::pedigree => COTS;
			   VERDICT_Properties::category => GPS;
			};
			
			radio: system Radio
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => COTS;
			};
			positionEstimator: system PositionEstimator
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => InternallyDeveloped; 
			};
			navigation: system Navigation
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => InternallyDeveloped;

			};
			fc: system FlightControl
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			actuation: system Actuation
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => COTS;
			};
			deliveryPlanner: system DeliveryPlanner
			{	
			 	-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			deliveryItemMechanism: system DeliveryItemMechanism
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => COTS;

			};
			camera: system Camera
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => COTS;
			};
			
			connector: system Connector
			{
				-- VERDICT Component Properties
			 	VERDICT_Properties::componentType => Hybrid;			 	
			 	VERDICT_Properties::pedigree => COTS;
			};
			
		connections
			c1: port positionEstimator.pos_est_est_pos -> navigation.nav_est_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c1b: port deliveryPlanner.launch_pos -> gnc.gnc_launch_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c2: port navigation.nav_move -> fc.fc_move
			{VERDICT_Properties::connectionType => Trusted;};

			c3: port fc.fc_fc_state -> navigation.nav_flight_control_state
			{VERDICT_Properties::connectionType => Trusted;};
			
			c4: port deliveryPlanner.dp_dest_location -> navigation.nav_dest_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c5: port navigation.nav_cur_pos -> deliveryPlanner.dp_cur_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c7: port deliveryItemMechanism.dim_delivery_status_out -> deliveryPlanner.dp_delivery_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c9: port camera.cm_camera_out -> deliveryPlanner.dp_camera_result
			{VERDICT_Properties::connectionType => Trusted;};
			
			c10: port deliveryPlanner.dp_radio_cmd -> radio.rd_radio_in
		    {VERDICT_Properties::connectionType => Trusted;
			 VERDICT_Properties::deviceAuthentication => false;
			 VERDICT_Properties::encryptedTransmission => false;
			 VERDICT_Properties::sessionAuthenticity => false;
			};
			
			c11: port radio.rd_radio_out -> deliveryPlanner.dp_radio_response
			{VERDICT_Properties::connectionType => Trusted;};
			
			c12: port gnc.gnc_gps_pos -> positionEstimator.pos_est_gps_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c14a: port dds_bus1 -> connector.conn_bus_in
			{VERDICT_Properties::connectionType => Untrusted;};
			
			c14b: port connector.conn_bus_out -> DeliveryPlanner.dp_bus_in
			{VERDICT_Properties::connectionType => Trusted;};
			
			c15: port deliveryPlanner.dp_bus_out -> dds_bus2
			{VERDICT_Properties::connectionType => Trusted;};
			
			c16: port dds_comm1 -> radio.rd_comm_in
			{VERDICT_Properties::connectionType => Untrusted;};
			
			c17: port radio.rd_comm_out -> dds_comm2
			{VERDICT_Properties::connectionType => Trusted;};

			c18a: port gnc.gnc_imu_pos -> positionEstimator.pos_est_imu_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c19: port fc.fc_motor_cmd -> actuation.motor_cmd
			{VERDICT_Properties::connectionType => Trusted;};
			
			c20: port actuation.response -> fc.fc_actuation_response
			{VERDICT_Properties::connectionType => Trusted;};	

			c22: port dds_satellite0_sig_pos -> gnc.gnc_satellite0_pos
			{VERDICT_Properties::connectionType => Untrusted;};
			
			c23: port dds_satellite1_sig_pos -> gnc.gnc_satellite1_pos
			{VERDICT_Properties::connectionType => Trusted;};
			
			c24: port navigation.nav_pos_act_out -> positionEstimator.pos_est_pos_act_in
			{VERDICT_Properties::connectionType => Trusted;};
			
			c25: port deliveryPlanner.dp_delivery_cmd -> deliveryItemMechanism.dim_delivery_cmd_in
			{VERDICT_Properties::connectionType => Trusted;};

			c26: port deliveryPlanner.dp_nav_cmd -> navigation.nav_cmd
			{VERDICT_Properties::connectionType => Trusted;};
			
			c27: port deliveryPlanner.dp_camera -> camera.cm_camera_in
			{VERDICT_Properties::connectionType => Trusted;};
			
			c28: port deliveryPlanner.dp_radio_cmd -> dds_radio_cmd
			{VERDICT_Properties::connectionType => Trusted;};
			
			c29: port radio.rd_radio_out -> dds_radio_response
			{VERDICT_Properties::connectionType => Trusted;};
			
			c30: port deliveryItemMechanism.dim_delivery_status_out -> dds_delivery_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c31: port deliveryPlanner.dp_delivery_cmd -> dds_probe_delivery_cmd
			{VERDICT_Properties::connectionType => Trusted;}; 							
			
			c32: port actuation.response -> dds_actuation_out
			{VERDICT_Properties::connectionType => Trusted;};	
			
			c33: port deliveryPlanner.dp_constellation -> gnc.gnc_constellation
			{VERDICT_Properties::connectionType => Trusted;};
			
			c34: port gnc.gnc_gps_health_status -> deliveryPlanner.dp_gps_health_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c35: port gnc.gnc_imu_health_status -> deliveryPlanner.dp_imu_health_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c36: port radio.rd_health_status -> deliveryPlanner.dp_rdo_health_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c37: port camera.cm_health_status -> deliveryPlanner.dp_cam_health_status
			{VERDICT_Properties::connectionType => Trusted;};
			
			c38: port gnc.gnc_probe_constellation -> dds_probe_constellation
			{VERDICT_Properties::connectionType => Trusted;};
			
			c39: port deliveryPlanner.dp_probe_init_mode -> dds_probe_init_mode
			{VERDICT_Properties::connectionType => Trusted;};
			
			c40: port gnc.gnc_probe_launch_pos -> dds_probe_launch_location
			{VERDICT_Properties::connectionType => Trusted;};
			
			c41: port navigation.nav_probe_dest_pos -> dds_probe_delivery_location
			{VERDICT_Properties::connectionType => Trusted;};
			
			c42: port deliveryItemMechanism.dim_package_is_secure -> deliveryPlanner.dp_package_is_secure
			{VERDICT_Properties::connectionType => Trusted;};
			
			c43: port deliveryPlanner.dp_nav_cmd -> dds_probe_fly_cmd
			{VERDICT_Properties::connectionType => Trusted;};
			
			c44: port deliveryPlanner.dp_probe_abort_mode -> dds_probe_abort_mode
			{VERDICT_Properties::connectionType => Trusted;};
		properties 
			VERDICT_Properties::componentType => Hybrid;
			VERDICT_Properties::pedigree => COTS;
			VERDICT_Properties::adversariallyTested => false;			
												
	end DeliveryDroneSystem.impl;
	
end DeliveryDrone;