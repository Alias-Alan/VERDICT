package DeliveryDrone

public
	with Base_Types;
    with Data_Types;
	with VERDICT_Properties;
	with GNC;

	system PositionEstimator 
		features
			-- inputs
			pos_est_gps_pos: in data port Data_Types::Position.impl;
			pos_est_imu_pos: in data port Data_Types::Position.impl;	
			pos_est_pos_act_in: in data port Data_Types::Position.impl;
			
			-- outputs
			pos_est_est_pos: out data port Data_Types::Position.impl;
	end PositionEstimator;

	system Navigation
		features
			-- inputs
			nav_est_pos: in data port Data_Types::Position.impl; 
			nav_dest_pos: in data port Data_Types::Position.impl;
			nav_cmd: in data port Base_Types::Boolean;
			nav_flight_control_state: in data port Base_Types::Boolean;
			
			-- outputs
			nav_move: out data port Base_Types::Boolean;				
			nav_cur_pos: out data port Data_Types::Position.impl;
			nav_pos_act_out: out data port Data_Types::Position.impl;
			nav_probe_dest_pos: out data port Data_Types::Position.impl
			{ VERDICT_Properties::probe => true; };
	end Navigation;
	
	system FlightControl
		features
			-- inputs
			fc_actuation_response: in data port Base_Types::Boolean;
			fc_move: in data port Base_Types::Boolean;
			
			-- outputs
			fc_motor_cmd: out data port Base_Types::Boolean;
			fc_fc_state: out data port Base_Types::Boolean;
	end FlightControl;
	
	system Actuation
		features
			-- inputs
			motor_cmd: in data port Base_Types::Boolean;
			
			-- outputs
			response: out data port Base_Types::Boolean;
	end Actuation;
	
	system DeliveryPlanner
		features
			-- inputs
			dp_bus_in: in data port Data_Types::InputBus.impl;
			dp_cur_pos: in data port Data_Types::Position.impl;
			dp_delivery_status: in data port Data_Types::DeliveryStatus;
			dp_radio_response: in data port Data_Types::RadioResponse.impl;
			dp_camera_result: in data port Base_Types::Integer;
			dp_gps_health_status: in data port Base_Types::Boolean; 
			dp_imu_health_status: in data port Base_Types::Boolean;
			dp_rdo_health_status: in data port Base_Types::Boolean;
			dp_cam_health_status: in data port Base_Types::Boolean;
			dp_package_is_secure: in data port Base_Types::Boolean; 
			
			-- outputs
			dp_radio_cmd: out data port Base_Types::Boolean;
			dp_delivery_cmd: out data port Data_Types::PackageDeliveryCommand;
			dp_dest_location: out data port Data_Types::Position.impl;
			dp_bus_out: out data port Base_Types::Boolean;
	        dp_nav_cmd: out data port Base_Types::Boolean;					
			dp_camera: out data port Base_Types::Boolean;
			dp_probe_safe_landing: out data port Data_Types::ProbeSafeLanding.impl
			{ VERDICT_Properties::probe => true; };
			dp_constellation: out data port Data_Types::Constellation; 
			launch_pos: out data port Data_Types::Position.impl;
			dp_probe_init_mode: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; }; 
			dp_probe_abort_mode: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; }; 
			dp_target_clear: out data port Base_Types::Boolean;
			dp_valid_marker: out data port Base_Types::Boolean;
	end DeliveryPlanner;
	
	system Radio
		features
			-- inputs
			rd_comm_in: in data port Data_Types::RadioResponse.impl;
			rd_radio_in: in data port Base_Types::Boolean;
			
			-- outputs
			rd_comm_out: out data port Base_Types::Boolean;
			rd_radio_out: out data port Data_Types::RadioResponse.impl;
			rd_health_status: out data port Base_Types::Boolean;
	end Radio;
	
	system DeliveryItemMechanism
		features
			-- inputs
			dim_delivery_cmd_in : in data port Data_Types::PackageDeliveryCommand;
			
			-- outputs
			dim_delivery_status_out: out data port Data_Types::DeliveryStatus;
			dim_package_is_secure: out data port Base_Types::Boolean;
	end DeliveryItemMechanism;
	
	system Camera
		features
			cm_camera_in: in data port Base_Types::Boolean;
			cm_camera_out: out data port Base_Types::Integer;
			cm_health_status: out data port Base_Types::Boolean;	
	end Camera;
			
	system Connector
		features
			-- inputs
				conn_bus_in: in data port Data_Types::InputBus.impl;
					
			-- outputs
				conn_bus_out: out data port Data_Types::InputBus.impl;
	end Connector;
	
	system DeliveryDroneSystem
		features
			dds_satellite0_sig_pos: in data port Data_Types::Position.impl;
			dds_satellite1_sig_pos: in data port Data_Types::Position.impl;
			dds_bus1: in data port Data_Types::InputBus.impl;
			dds_comm1: in data port Data_Types::RadioResponse.impl;
			
			dds_comm2: out data port Base_Types::Boolean;
			dds_bus2: out data port Base_Types::Boolean;			
			
			dds_radio_cmd: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; };
			dds_radio_response: out data port Data_Types::RadioResponse.impl
			{ VERDICT_Properties::probe => true; };
			dds_delivery_status: out data port Data_Types::DeliveryStatus
			{ VERDICT_Properties::probe => true; };
			
			dds_actuation_out: out data port Base_Types::Boolean;
			dds_probe_init_mode: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; };
			dds_probe_abort_mode: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; };
			dds_probe_delivery_cmd: out data port Data_Types::PackageDeliveryCommand
			{ VERDICT_Properties::probe => true; };
			dds_probe_constellation: out data port Data_Types::Constellation
			{ VERDICT_Properties::probe => true; };
			dds_probe_launch_location: out data port Data_Types::Position.impl
			{ VERDICT_Properties::probe => true; };
			dds_probe_delivery_location: out data port Data_Types::Position.impl
			{ VERDICT_Properties::probe => true; };
			dds_probe_fly_cmd: out data port Base_Types::Boolean
			{ VERDICT_Properties::probe => true; };
	end DeliveryDroneSystem;
	
	system implementation DeliveryDroneSystem.Impl
		subcomponents
			gnc: system GNC::GNC.Impl;
			
			radio: system Radio
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			positionEstimator: system PositionEstimator
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Software;
				VERDICT_Properties::pedigree => COTS; 
			 	VERDICT_Properties::adversariallyTested => false;
			 	--VERDICT_Properties::adversariallyTested => true; -- Fix for Logic Bomb
				
			};
			navigation: system Navigation
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Software;
				VERDICT_Properties::pedigree => InternallyDeveloped;

			};
			fc: system FlightControl
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Software;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			actuation: system Actuation
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			deliveryPlanner: system DeliveryPlanner
			{	
			 	-- VERDICT Component Properties
				VERDICT_Properties::componentType => Software;
				VERDICT_Properties::pedigree => Sourced;
				--VERDICT_Properties::pedigree => InternallyDeveloped; -- Fix for Logic Bomb
			};
			deliveryItemMechanism: system DeliveryItemMechanism
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => InternallyDeveloped;

			};
			camera: system Camera
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hardware;
				VERDICT_Properties::pedigree => InternallyDeveloped;
			};
			
			connector: system Connector
			{
				-- VERDICT Component Properties
			 	VERDICT_Properties::componentType => Hybrid;
			 	
			 	VERDICT_Properties::pedigree => COTS;
			 	--VERDICT_Properties::pedigree => InternallyDeveloped; -- Fix for Logic Bomb / Hardware Trojan
			 	VERDICT_Properties::adversariallyTested => false;
			};
			
		connections
			c1: port positionEstimator.pos_est_est_pos -> navigation.nav_est_pos;
			
			c1b: port deliveryPlanner.launch_pos -> gnc.gnc_launch_pos;
			
			c2: port navigation.nav_move -> fc.fc_move;

			c3: port fc.fc_fc_state -> navigation.nav_flight_control_state;
			
			c4: port deliveryPlanner.dp_dest_location -> navigation.nav_dest_pos;
			
			c5: port navigation.nav_cur_pos -> deliveryPlanner.dp_cur_pos;
			
			c7: port deliveryItemMechanism.dim_delivery_status_out -> deliveryPlanner.dp_delivery_status;
			
			c9: port camera.cm_camera_out -> deliveryPlanner.dp_camera_result;
			
			c10: port deliveryPlanner.dp_radio_cmd -> radio.rd_radio_in;
			
			c11: port radio.rd_radio_out -> deliveryPlanner.dp_radio_response;
			
			c12: port gnc.gnc_gps_pos -> positionEstimator.pos_est_gps_pos;
			
			c14a: port dds_bus1 -> connector.conn_bus_in;
			
			c14b: port connector.conn_bus_out -> DeliveryPlanner.dp_bus_in;
			
			c15: port deliveryPlanner.dp_bus_out -> dds_bus2;
			
			c16: port dds_comm1 -> radio.rd_comm_in
			{VERDICT_Properties::connectionType => Remote;
			 VERDICT_Properties::authenticated => false;
			 --VERDICT_Properties::authenticated => true; -- Fix for Network Injection
			 --VERDICT_Properties::encryptedTransmission => true; -- Fix for Network Injection
			};
			
			c17: port radio.rd_comm_out -> dds_comm2;

			c18a: port gnc.gnc_imu_pos -> positionEstimator.pos_est_imu_pos;
			
			c19: port fc.fc_motor_cmd -> actuation.motor_cmd;
			
			c20: port actuation.response -> fc.fc_actuation_response;	

			c22: port dds_satellite0_sig_pos -> gnc.gnc_satellite0_pos;
			
			c23: port dds_satellite1_sig_pos -> gnc.gnc_satellite1_pos;
			
			c24: port navigation.nav_pos_act_out -> positionEstimator.pos_est_pos_act_in;
			
			c25: port deliveryPlanner.dp_delivery_cmd -> deliveryItemMechanism.dim_delivery_cmd_in;

			c26: port deliveryPlanner.dp_nav_cmd -> navigation.nav_cmd;
			
			c27: port deliveryPlanner.dp_camera -> camera.cm_camera_in;
			
			c28: port deliveryPlanner.dp_radio_cmd -> dds_radio_cmd;
			
			c29: port radio.rd_radio_out -> dds_radio_response;
			
			c30: port deliveryItemMechanism.dim_delivery_status_out -> dds_delivery_status;
			
			c31: port deliveryPlanner.dp_delivery_cmd -> dds_probe_delivery_cmd; 							
			
			c32: port actuation.response -> dds_actuation_out;	
			
			c33: port deliveryPlanner.dp_constellation -> gnc.gnc_constellation;
			
			c34: port gnc.gnc_gps_health_status -> deliveryPlanner.dp_gps_health_status;
			
			c35: port gnc.gnc_imu_health_status -> deliveryPlanner.dp_imu_health_status;
			
			c36: port radio.rd_health_status -> deliveryPlanner.dp_rdo_health_status;
			
			c37: port camera.cm_health_status -> deliveryPlanner.dp_cam_health_status;
			
			c38: port gnc.gnc_probe_constellation -> dds_probe_constellation;
			
			c39: port deliveryPlanner.dp_probe_init_mode -> dds_probe_init_mode;
			
			c40: port gnc.gnc_probe_launch_pos -> dds_probe_launch_location;
			
			c41: port navigation.nav_probe_dest_pos -> dds_probe_delivery_location;
			
			c42: port deliveryItemMechanism.dim_package_is_secure -> deliveryPlanner.dp_package_is_secure;
			
			c43: port deliveryPlanner.dp_nav_cmd -> dds_probe_fly_cmd;
			
			c44: port deliveryPlanner.dp_probe_abort_mode -> dds_probe_abort_mode;
												
	end DeliveryDroneSystem.impl;
	
end DeliveryDrone;