package GNC

public
	with Base_Types;
    with Data_Types;
    with VERDICT_Properties;

	system GPS
		features
			-- inputs
			gps_constellation: in data port Data_Types::Constellation;
			gps_satellite0_pos: in data port Data_Types::Position.impl;
			gps_satellite1_pos: in data port Data_Types::Position.impl;
			
			-- outputs
			gps_pos: out data port Data_Types::Position.impl;
			gps_health_status: out data port Base_Types::Boolean;
			gps_probe_constellation: out data port Data_Types::Constellation
			{ VERDICT_Properties::probe => true; };
	end GPS;

	system IMU
		features
			-- inputs
			imu_launch_pos: in data port Data_Types::Position.impl;
			
			-- outputs
			imu_pos: out data port Data_Types::Position.impl;
			imu_health_status: out data port Base_Types::Boolean;
			imu_probe_launch_pos: out data port Data_Types::Position.impl;
	end IMU;
		
	system GNC
		features
			-- inputs
			gnc_constellation: in data port Data_Types::Constellation;
			gnc_satellite0_pos: in data port Data_Types::Position.impl;
			gnc_satellite1_pos: in data port Data_Types::Position.impl;
			gnc_launch_pos: in data port Data_Types::Position.impl;
			
			-- outputs
			gnc_gps_pos: out data port Data_Types::Position.impl;
			gnc_gps_health_status: out data port Base_Types::Boolean;
			gnc_probe_constellation: out data port Data_Types::Constellation;
			gnc_imu_pos: out data port Data_Types::Position.impl;
			gnc_imu_health_status: out data port Base_Types::Boolean;
			gnc_probe_launch_pos: out data port Data_Types::Position.impl;
			
		
	end GNC;
	
	system implementation GNC.Impl
		subcomponents
			gps: system GPS
			{
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				-- VERDICT_Properties::manufacturer => InHouse; -- Fix for Logic Bomb / Hardware Trojan
				VERDICT_Properties::pedigree => COTS;	
				VERDICT_Properties::adversariallyTested => false;															
			};
			imu: system IMU
			{ 
				-- VERDICT Component Properties
				VERDICT_Properties::componentType => Hybrid;
				VERDICT_Properties::pedigree => Sourced;
				
			};
		connections
			i1: port gnc_constellation -> gps.gps_constellation;
			i2: port gnc_satellite0_pos -> gps.gps_satellite0_pos;
			i3: port gnc_satellite1_pos -> gps.gps_satellite1_pos;
			i4: port gnc_launch_pos -> imu.imu_launch_pos;
			i5: port gps.gps_pos -> gnc_gps_pos;
			i6: port gps.gps_health_status -> gnc_gps_health_status;
			i7: port gps.gps_probe_constellation -> gnc_probe_constellation;
			i8: port imu.imu_pos -> gnc_imu_pos;
			i9: port imu.imu_health_status -> gnc_imu_health_status;
			i10: port imu.imu_probe_launch_pos -> gnc_probe_launch_pos;
	end GNC.Impl;
end GNC;